version: "3.7"
networks:
  net:
    external: true

services:
  # region Container Management
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    network_mode: host
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - type: bind
        source: /run/docker.sock
        target: /run/docker.sock
      - type: bind
        source: /srv/portainer
        target: /data
  # end region

  webserver:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    networks:
      - net
    environment:
      - VIRTUAL_HOST=www.acme.looniversity
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - type: bind
        source: /srv/webserver
        target: /usr/share/nginx/html/

  # region Web Apps
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - net
    environment:
      - VIRTUAL_HOST=nextcloud.acme.looniversity
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - type: bind
        source: /srv/nextcloud
        target: /var/www/html

  ubooquity:
    image: linuxserver/ubooquity:amd64-latest
    container_name: ubooquity
    restart: unless-stopped
    networks:
      - net
    environment:
      - VIRTUAL_HOST=ubooquity.acme.looniversity
      - VIRTUAL_PORT=2202
      - NGINX_PROXY_CONTAINER=nginx-proxy
    env_file:
      - .timezone-env
    volumes:
      - type: bind
        source: /srv/ubooquity/config
        target: /config
      - type: bind
        source: /srv/ubooquity/books
        target: /books
      - type: bind
        source: /srv/ubooquity/comics
        target: /comics
      - type: bind
        source: /srv/ubooquity/files
        target: /files

  calibre:
    image: linuxserver/calibre
    container_name: calibre
    restart: unless-stopped
    network_mode: host
    env_file:
      - .timezone-env
    environment:
      - PUID=1000
      - GUID=1000
      - UMASK_SET=022
    volumes:
      - type: bind
        source: /srv/calibre
        target: /config
    ports:
      - 8080:8080
      - 8081:8081
  # endregion

  # Region System Monitoring
  tsdb:
    container_name: influxdb
    image: influxdb:latest
    restart: always
    network_mode: host
    ports:
      - "8086:8086"
    volumes:
      - type: bind
        source: /srv/influxdb/config/influxdb.conf
        target: /etc/influxdb/influxdb.conf
        read_only: true
      - type: bind
        source: /srv/influxdb/data
        target: /var/lib/influxdb

  tsdb-ui:
    container_name: chronograf
    image: chronograf:latest
    restart: always
    network_mode: host
    ports:
      - "8888:8888"
    volumes:
      - type: bind
        source: /srv/chronograf
        target: /var/lib/chronograf
    environment:
      INFLUXDB_URL: http://0.0.0.0:8086

  aggregator:
    container_name: telegraf
    image: telegraf:latest
    restart: always
    network_mode: host
    ports:
      - "8125:8125"
      - "8092:8092"
      - "8094:8094"

  graphing:
    container_name: grafana
    image: grafana/grafana:latest
    network_mode: host
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: /srv/grafana
        target: /srv/grafana
    depends_on:
      - "tsdb"
  # endregion

  #  region Relational DB - Postgresql
  rdb:
    container_name: postgres
    image: postgres:latest
    restart: always
    network_mode: host
    ports:
      - "5432:5432"
    env_file:
      - ".postgres-env"
    volumes:
      - type: bind
        source: /srv/postgresql/data
        target: /var/lib/postgresql/data

  rdb-ui:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      - rdb
    network_mode: host
    ports:
      - "5433:5433"
    env_file:
      - ".postgres-env"
    volumes:
      - type: bind
        source: /srv/pgadmin/data
        target: /var/lib/pgadmin
  # endregion

  mqtt:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    restart: always
    network_mode: host
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - type: bind
        source: /srv/mosquitto/config
        target: /mosquitto/config
      - type: bind
        source: /srv/mosquitto/data
        target: /mosquitto/data
      - type: bind
        source: /srv/mosquitto/log
        target: /mosquitto/log

  radicale:
    container_name: radicale
    image: tomsquest/docker-radicale
    restart: unless-stopped
    network_mode: host
    ports:
      - "5232:5232"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
      - KILL
    environment:
      - UID=1000
      - GID=1000
    volumes:
      - type: bind
        source: /srv/radicale/data
        target: /data
      - type: bind
        source: /srv/radicale/config
        target: /config

  glances:
    container_name: glances
    image: nicolargo/glances:latest
    restart: unless-stopped
    network_mode: host
    ports:
      - "61208:61208"
      - "61209:61209"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      - GLANCES_OPT=-w
