  # region Container Management
  portainer:
    container_name: portainer
    image: docker.io/portainer/portainer-ce:latest
    network_mode: host
    command: -H unix:///var/run/docker.sock
    privileged: true
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /srv/portainer/
        target: /data/
  # end region

  samba:
    container_name: samba
    image: docker.io/dperson/samba:latest
    network_mode: host
    restart: unless-stopped
    volumes:
      - type: bind
        source: /srv/samba/
        target: /etc/samba/
    env_file:
      - .timezone-env
      - .samba-env
    ports:
      - "139:139"
      - "445:445"

  webserver:
    container_name: webserver
    image: docker.io/nginx:latest
    restart: unless-stopped
    networks:
      - net
    environment:
      - VIRTUAL_HOST=www.acme.looniversity
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - type: bind
        source: /srv/webserver
        target: /usr/share/nginx/html/

  # region Web Apps
  nextcloud:
    container_name: nextcloud
    image: docker.io/nextcloud:latest
    restart: unless-stopped
    networks:
      - net
    environment:
      - VIRTUAL_HOST=nextcloud.acme.looniversity
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - type: bind
        source: /srv/nextcloud
        target: /var/www/html

  ubooquity:
    container_name: ubooquity
    image: docker.io/linuxserver/ubooquity:amd64-latest
    restart: unless-stopped
    network_mode: host
#    networks:
#      - net
#    environment:
#      - VIRTUAL_HOST=ubooquity.acme.looniversity
#      - VIRTUAL_PORT=2202
#      - NGINX_PROXY_CONTAINER=nginx-proxy
    env_file:
      - .timezone-env
    ports:
      - 2202:2202
      - 2203:2203
    volumes:
      - type: bind
        source: /srv/ubooquity/config/
        target: /config/
      - type: bind
        source: /srv/ubooquity/books/
        target: /books/
      - type: bind
        source: /srv/ubooquity/comics/
        target: /comics/
      - type: bind
        source: /srv/ubooquity/files/
        target: /files/

  calibre:
    container_name: calibre
    image: docker.io/linuxserver/calibre
    restart: unless-stopped
    network_mode: host
    env_file:
      - .timezone-env
    environment:
      - PUID=1000
      - GUID=1000
      - UMASK_SET=022
    volumes:
      - type: bind
        source: /srv/calibre/
        target: /config/
    ports:
      - 8080:8080
      - 8081:8081
  # endregion

  # Region System Monitoring
  tsdb:
    container_name: influxdb
    image: docker.io/influxdb:latest
    restart: always
    network_mode: host
    ports:
      - "8086:8086"
    volumes:
      - type: bind
        source: /srv/influxdb/config/influxdb.conf
        target: /etc/influxdb/influxdb.conf
        read_only: true
      - type: bind
        source: /srv/influxdb/data/
        target: /var/lib/influxdb/

  aggregator:
    container_name: telegraf
    image: docker.io/telegraf:latest
    restart: always
    network_mode: host
    ports:
      - "8125:8125"
      - "8092:8092"
      - "8094:8094"
    volumes:
      - type: bind
        source: /srv/telegraf/telegraf.conf
        target: /etc/telegraf/telegraf.conf
        read_only: true
  # endregion

  #  region Relational DB - Postgresql
  rdb:
    container_name: postgres
    image: docker.io/postgres:latest
    restart: always
    network_mode: host
    ports:
      - "5432:5432"
    env_file:
      - ".postgres-env"
    volumes:
      - type: bind
        source: /srv/postgresql/data/
        target: /var/lib/postgresql/data/
  # endregion

  ddb:
    container_name: mongo
    image: docker.io/mongo:4.2.10
    restart: always
    network_mode: host
    ports:
      - "27017-27019:27017-27019"
    env_file:
      - ".mongo-env"
    volumes:
      - type: bind
        source: /srv/mongo/db/
        target: /data/db/

  mqtt:
    container_name: mosquitto
    image: docker.io/eclipse-mosquitto:latest
    restart: always
    network_mode: host
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - type: bind
        source: /srv/mosquitto/config/
        target: /mosquitto/config/
      - type: bind
        source: /srv/mosquitto/data/
        target: /mosquitto/data/
      - type: bind
        source: /srv/mosquitto/log/
        target: /mosquitto/log/

  radicale:
    container_name: radicale
    image: docker.io/tomsquest/docker-radicale
    restart: unless-stopped
    network_mode: host
    ports:
      - "5232:5232"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
      - KILL
    environment:
      - UID=1000
      - GID=1000
    volumes:
      - type: bind
        source: /srv/radicale/data/
        target: /data/
      - type: bind
        source: /srv/radicale/config/
        target: /config/

  glances:
    container_name: glances
    image: docker.io/nicolargo/glances:latest
    restart: unless-stopped
    network_mode: host
    ports:
      - "61208:61208"
      - "61209:61209"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      - GLANCES_OPT=-w
